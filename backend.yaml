- name: Backend setup 
  hosts: backend
  tasks:

  - name: disabling node js module.
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enabling node js 20 module.
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: installing node js 
    ansible.builtin.package:
      name: "{{ item }}""
      state: present
    loop:
    - nodejs
    - mysql
  
  - name: creating a user
    ansible.builtin.user:
    name: expense

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download 
   ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

  - name: Extract foo.tgz
    ansible.builtin.unarchive:
     src: /tmp/backend.zip
     dest: /app

  - name: installing dependencies.
    ansible.builtin.command: npm install
    args:
      chdir: app/

  - name: copying backend service file.
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon process reloading    
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      daemon_reload: true